name: Snyk scheduled Docker image scan for external dependencies

on:
  schedule:
    - cron: '0 3 * * 1'
  workflow_dispatch:

jobs:

  collect-docker-images:
    runs-on: ubuntu-latest
    env:
      OUTPUT_FILE: workflows/docker-images-matrix.json
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.9.0

      - id: set-matrix
        name: Generate image matrix of current master branch
        env:
          # Any image that matches any of these patterns will be ignored for scanning.
          # Reasons:
          # - bats: init container
          # - busybox: init container
          # - alpine: init container
          # - linuxserver/yq: init container
          EXCLUDE_IMAGE_PATTERNS:  bats
            busybox
            docker.io/alpine
            linuxserver/yq
          # In this action we only scan 'external' dependencies of the RADAR-base deployment.
          # RADAR-base services are scanned in the respective GitHub repositories.
          # Notes on charts:
          # - elasticsearch:
          #   FIXME: the elasticsearch image gives sarif related errors, so it is excluded for now.
          #        we need a better way to handle this.
          # - velero: we do not offer this chart as part of the official release and therefore do not check for vulnerabilities.
          INCLUDE_CHARTS: charts/cc-schema-registry-proxy
            charts/cert-manager-lets-encrypt
            charts/kube-prometheus-stack
            charts/radar-grafana
            charts/radar-hydra
            charts/radar-kratos
            charts/radar-s3-proxy
            charts/radar-nifi
            external/cloudnativepg-operator
            external/fluent-bit
            external/graylog
            external/ingress-nginx
            external/strimzi-kafka-operator
            external/strimzi-registry-operator
          # Any image that matches any of these patterns will be included for scanning.
          # Reasons:
          # - ghcr.io/cloudnative-pg/postgresql:16: deployed via operator so image tag not specifies in the chart in this repo.
          # - timescale/timescaledb-ha:pg16-ts2.15: deployed via operator so image tag not specified in the chart in this repo.
          # - quay.io/strimzi/kafka:0.46.0-kafka-3.9.0: deployed via operator so image tag not specified in the chart in this repo.
          # - confluentinc/cp-schema-registry:7.2.1: deployed via operator so image tag not specified in the chart in this repo.
          # - docker.io/bitnamilegacy/redis:7.2.4-debian-12-r13: overridden in RADAR-Kubernetes. Will be replaced by non-bitnami chart soon.
          # - docker.io/bitnami/minio:2024.8.3-debian-12-r0: overridden in RADAR-Kubernetes. Will be replaced by non-bitnami chart soon.
          # - docker.io/bitnami/mongodb:7.0.12-debian-12-r4: overridden in RADAR-Kubernetes. Will be replaced by non-bitnami chart soon.
          INCLUDE_IMAGES: ghcr.io/cloudnative-pg/postgresql:16
            timescale/timescaledb-ha:pg16-ts2.15
            quay.io/strimzi/kafka:0.46.0-kafka-3.9.0
            confluentinc/cp-schema-registry:7.2.1
            docker.io/bitnamilegacy/redis:7.2.4-debian-12-r13
            docker.io/bitnamilegacy/minio:2024.8.3-debian-12-r0
            docker.io/bitnamilegacy/mongodb:7.0.12-debian-12-r4
        run: .github/bin/external_docker_image_matrix

      # Disabled for now because it conflicts with the protection rule on main branch.
      # - name: Commit and push if docker-images-matrix.json changed
      #   run: |
      #     git diff
      #     git config --global user.email "actions@github.com"
      #     git config --global user.name "GitHub Action"
      #     git add .github/workflows/docker-images-matrix.json
      #     git commit -am "Update docker image references in docker-images-matrix.json" || exit 0
      #     git push

  scan:
    needs: collect-docker-images
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.collect-docker-images.outputs.matrix) }}
    steps:
      - name: Run Snyk to check for vulnerabilities
        continue-on-error: true
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ${{ matrix.DOCKER_IMAGE }}
          args: >-
            --fail-on=upgradable
            --severity-threshold=high
            --policy-path=.snyk
            --org=radar-base
            --json-file-output=snyk.json

      # Detected vulnerabilities will appear on Github as Issues
      - name: Report new vulnerabilities
        uses: thehyve/report-vulnerability@master
        if: success() || failure()
        with:
          report-file: snyk.json
          timestamp: ${{ github.run_id }}
          # Long labels trigger an error on Github.
          category: ${{ matrix.DOCKER_IMAGE_SHORT }}
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # This step is a temporary fix for closing obsolete issues.
  # It can be removed when using an improved version of the thehyve/report-vulnerability action.
  close-old-snyk-issues:
    needs: scan
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Close previous Snyk issues without current run label
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LABEL: Snyk-timestamp:${{ github.run_id }}
        run: .github/bin/close_gh_issues
