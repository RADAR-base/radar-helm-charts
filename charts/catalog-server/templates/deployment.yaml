apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "common.names.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "catalog-server.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    rollingUpdate:
      maxUnavailable: 100%
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "catalog-server.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        backup.velero.io/backup-volumes: config
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      {{- include "catalog-server.imagePullSecrets" . | nindent 6 }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: "app.kubernetes.io/name"
                    operator: In
                    values:
                    - {{ template "catalog-server.name" . }}
                  - key: "app.kubernetes.io/instance"
                    operator: In
                    values:
                    - {{ .Release.Name }}
              topologyKey: "kubernetes.io/hostname"
      initContainers:
      - name: kafka-init
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: {{ template "catalog-server.image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        args:
          - topic_init.sh
        env:
        - name: KAFKA_BOOTSTRAP_SERVERS
          value: "{{ .Values.kafka }}"
        - name: KAFKA_SCHEMA_REGISTRY
          value: "{{ .Values.schema_registry }}"
        - name: KAFKA_NUM_BROKERS
          value: "{{ .Values.kafka_num_brokers }}"
        - name: KAFKA_NUM_REPLICATION
          value: "{{ .Values.kafka_num_replication }}"
        - name: KAFKA_NUM_PARTITIONS
          value: "{{ .Values.kafka_num_partitions }}"
        - name: CONFIG_PATH
          value: /etc/radar-schemas-tools/config.yaml
        {{- if .Values.cc.enabled }}
        - name: KAFKA_SASL_JAAS_CONFIG
          valueFrom:
            secretKeyRef:
              name: {{ template "catalog-server.fullname" . }}
              key: saslJaasConfig
        - name: SCHEMA_REGISTRY_API_KEY
          valueFrom:
            secretKeyRef:
              name: {{ template "catalog-server.fullname" . }}
              key: srApiKey
        - name: SCHEMA_REGISTRY_API_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ template "catalog-server.fullname" . }}
              key: srApiSecret
        {{- end }}
        {{- with .Values.extraEnvVarsInit }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        volumeMounts:
          - name: config
            mountPath: /etc/radar-schemas-tools
          - name: config-schemas
            mountPath: /schema/conf
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ template "catalog-server.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          args:
            - radar-catalog-server
            - -c
            - /etc/radar-schemas-tools/config.yaml
            - /schema/merged
          ports:
            - name: http
              containerPort: 9010
              protocol: TCP
          {{- if .Values.customLivenessProbe }}
          livenessProbe: {{- .Values.customLivenessProbe | toYaml | nindent 12 }}
          {{- else if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /source-types
              port: http
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.customReadinessProbe }}
          readinessProbe: {{- .Values.customReadinessProbe | toYaml | nindent 12 }}
          {{- else if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /source-types
              port: http
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /etc/radar-schemas-tools
            - name: config-schemas
              mountPath: /schema/conf
      volumes:
        - name: config
          configMap:
            name: {{ include "catalog-server.fullname" . }}
        - name: config-schemas
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "catalog-server.fullname" .) }}
        {{- else }}
          emptyDir: {}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
