{{- define "oauth-clients-details.csv" -}}
client_id;resource_ids;client_secret;scope;authorized_grant_types;redirect_uri;authorities;access_token_validity;refresh_token_validity;additional_information;autoapprove
{{- range $clientId, $client := .Values.oauth_clients -}}
{{- if kindIs "map" $client -}}
{{- if $client.enable }}
{{ $clientId }};{{ join "," $client.resource_ids }};
{{- if has "client_credentials" $client.authorized_grant_types -}}
{{- required (print "management_portal.oauth_clients."  $clientId " must have client_secret: it has client_credentials grant type")  $client.client_secret -}}
{{- else -}}
{{- $client.client_secret -}}
{{- end -}}
;{{ join "," $client.scope }};{{ join "," $client.authorized_grant_types }};
{{- range $index, $redirect_uri := $client.redirect_uri -}}
  {{- if gt $index 0 -}},{{- end -}}
  {{- if regexMatch "^/" $redirect_uri -}}
    https://{{ $.Values.server_name }}{{ $redirect_uri }}
  {{- else -}}
    {{ $redirect_uri }}
{{- end -}}
{{- end -}};
{{- $client.authorities | default "" }};
{{- int64 $client.access_token_validity }};
{{- int64 $client.refresh_token_validity | default 0 }};
{{- $client.additional_information | default "{}" }};
{{- join "," $client.autoapprove }}
{{- end -}}
{{- end -}}
{{- end -}}
{{- end}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "common.names.fullname" . }}-config
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
data:
  oauth_client_details.csv: {{ include "oauth-clients-details.csv" . | b64enc | quote }}
