apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "common.names.fullname" . }}-properties
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
data:
  source-fitbit.properties: |
    name=radar-fitbit-source
    connector.class=org.radarbase.connect.rest.fitbit.FitbitSourceConnector
    tasks.max={{ .Values.connector_num_tasks }}
    rest.source.base.url={{ .Values.fitbit_api_url }}
    rest.source.poll.interval.ms={{ .Values.rest_source_poll_interval_ms | int }}
    rest.source.request.generator.class=org.radarbase.connect.rest.fitbit.request.FitbitRequestGenerator
    fitbit.api.client={{ .Values.fitbit_api_client }}
    fitbit.api.secret={{ .Values.fitbit_api_secret }}
    fitbit.api.intraday={{ .Values.includeIntradayData }}
    fitbit.user.repository.class=org.radarbase.connect.rest.fitbit.user.ServiceUserRepository
    fitbit.user.repository.url={{ .Values.radar_rest_sources_backend_url }}
    fitbit.user.repository.client.id={{ .Values.oauthClientId }}
    fitbit.user.repository.client.secret={{ .Values.oauthClientSecret }}
    fitbit.user.repository.oauth2.token.url={{ .Values.managementportal_url }}/oauth/token
    fitbit.user.poll.interval={{ .Values.fitbit_user_poll_interval | int }}
    application.loop.interval.ms={{ .Values.application_loop_interval_ms | int }}
    user.cache.refresh.interval.ms={{ .Values.user_cache_refresh_interval_ms | int}}
  {{- if and .Values.kafka_wait.enabled .Values.kafka_wait.properties }}
  kafka-wait.properties: |
    {{ .Values.kafka_wait.properties | indent 4 }}
  {{- end }}
