apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "common.names.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "radar-fitbit-connector.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    rollingUpdate:
      maxUnavailable: 100%
  template:
    metadata:
      annotations:
        checksum/configmap-properties: {{ include (print $.Template.BasePath "/configmap-properties.yaml") . | sha256sum }}
        checksum/configmap-users: {{ include (print $.Template.BasePath "/configmap-users.yaml") . | sha256sum }}
        backup.velero.io/backup-volumes: logs
      labels:
        app.kubernetes.io/name: {{ include "radar-fitbit-connector.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- include "radar-fitbit-connector.imagePullSecrets" . | nindent 6 }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: "app.kubernetes.io/name"
                    operator: In
                    values:
                    - {{ template "radar-fitbit-connector.name" . }}
                  - key: "app.kubernetes.io/instance"
                    operator: In
                    values:
                    - {{ .Release.Name }}
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ template "radar-fitbit-connector.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          env:
          - name: CONNECT_BOOTSTRAP_SERVERS
            value: "{{ .Values.kafka }}"
          - name: CONNECT_REST_PORT
            value: "8083"
          - name: CONNECT_GROUP_ID
            value: "default"
          - name: CONNECT_CONFIG_STORAGE_TOPIC
            value: "default.config"
          - name: CONNECT_OFFSET_STORAGE_TOPIC
            value: "default.offsets"
          - name: CONNECT_STATUS_STORAGE_TOPIC
            value: "default.status"
          - name: CONNECT_KEY_CONVERTER
            value: "io.confluent.connect.avro.AvroConverter"
          - name: CONNECT_VALUE_CONVERTER
            value: "io.confluent.connect.avro.AvroConverter"
          - name: CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL
            value: "{{ .Values.schema_registry }}"
          - name: CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL
            value: "{{ .Values.schema_registry }}"
          - name: CONNECT_INTERNAL_KEY_CONVERTER
            value: "org.apache.kafka.connect.json.JsonConverter"
          - name: CONNECT_INTERNAL_VALUE_CONVERTER
            value: "org.apache.kafka.connect.json.JsonConverter"
          - name: CONNECT_OFFSET_STORAGE_FILE_FILENAME
            value: "/var/lib/kafka-connect-fitbit-source/logs/connect.offsets"
          - name: CONNECT_REST_ADVERTISED_HOST_NAME
            value: {{ include "radar-fitbit-connector.fullname" . }}
          - name: CONNECT_ZOOKEEPER_CONNECT
            value: "{{ .Values.zookeeper }}"
          - name: CONNECTOR_PROPERTY_FILE_PREFIX
            value: "source-fitbit/source-fitbit"
          - name: KAFKA_HEAP_OPTS
            value: {{ .Values.heapOptions }}
          - name: KAFKA_BROKERS
            value: "{{ .Values.kafka_num_brokers }}"
          - name: CONNECT_LOG4J_LOGGERS
            value: "org.reflections=ERROR"
          - name: WAIT_FOR_KAFKA
            value: {{ if .Values.kafka_wait.enabled }}"1"{{ else }}"0"{{ end }}
          {{- if and .Values.kafka_wait.enabled .Values.kafka_wait.properties }}
          - name: COMMAND_CONFIG_FILE_PATH
            value: /etc/kafka-connect/source-fitbit/kafka-wait.properties
          {{- end }}
          {{- with .Values.extraEnvVars }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          {{- if .Values.customLivenessProbe }}
          livenessProbe: {{- .Values.customLivenessProbe | toYaml | nindent 12 }}
          {{- else if .Values.livenessProbe.enabled }}
          livenessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - curl -sf localhost:8083/connectors/radar-fitbit-source/status | grep -o '\"state\":\"[^\"]*\"' | tr '\\n' ',' | grep -vq FAILED || exit 1
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.customReadinessProbe }}
          readinessProbe: {{- .Values.customReadinessProbe | toYaml | nindent 12 }}
          {{- else if .Values.readinessProbe.enabled }}
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - curl -sf localhost:8083/connectors/radar-fitbit-source/status | grep -o '\"state\":\"[^\"]*\"' | tr '\\n' ',' | grep -vq FAILED || exit 1
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config-properties
              mountPath: /etc/kafka-connect/source-fitbit
            - name: config-users
              mountPath: /var/lib/kafka-connect-fitbit-source/users
            - name: logs
              mountPath: /var/lib/kafka-connect-fitbit-source/logs
      {{- if .Values.persistence.fsUserOverride }}
      initContainers:
      - name: fix-permissions
        command:
        - chown
        - -R
        - {{ .Values.persistence.fsUserOverride }}
        - /var/lib/kafka-connect-fitbit-source/logs
        image: alpine:latest
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - mountPath: /var/lib/kafka-connect-fitbit-source/logs
          name: logs
      {{- end }}
      volumes:
        - name: config-properties
          configMap:
            name: {{ include "radar-fitbit-connector.fullname" . }}-properties
        - name: config-users
          configMap:
            name: {{ include "radar-fitbit-connector.fullname" . }}-users
        - name: logs
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "radar-fitbit-connector.fullname" .) }}
        {{- else }}
          emptyDir: {}
        {{ end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
