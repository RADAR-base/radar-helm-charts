apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "common.names.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "radar-home.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "radar-home.selectorLabels" . | nindent 8 }}
    spec:
      {{- include "radar-home.imagePullSecrets" . | nindent 6 }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: "app.kubernetes.io/name"
                    operator: In
                    values:
                    - {{ template "radar-home.name" . }}
                  - key: "app.kubernetes.io/instance"
                    operator: In
                    values:
                    - {{ .Release.Name }}
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ template "radar-home.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          env:
            {{- if .Values.s3.enabled }}
            - name: S3_ENABLED
              value: "true"
            - name: S3_URL
              value: {{ .Values.s3.url | quote }}
            {{- end }}
            {{- if .Values.restAuthorizer.enabled }}
            - name: REST_AUTHORIZER_ENABLED
              value: "true"
            {{- end }}
            {{- if .Values.dashboard.enabled }}
            - name: DASHBOARD_ENABLED
              value: "true"
            - name: DASHBOARD_URL
              value: {{ .Values.dashboard.url | quote }}
            {{- end }}
            {{- if .Values.uploadPortal.enabled }}
            - name: UPLOAD_PORTAL_ENABLED
              value: "true"
            {{- end }}
            {{- if .Values.appConfig.enabled }}
            - name: APP_CONFIG_ENABLED
              value: "true"
            {{- end }}
            {{- if .Values.logging.enabled }}
            - name: GRAYLOG_ENABLED
              value: "true"
            {{- end }}
            {{- if .Values.logging.url }}
            - name: GRAYLOG_URL
              value: {{ .Values.logging.url | quote }}
            {{- end }}
            {{- if .Values.monitoring.enabled }}
            - name: MONITOR_ENABLED
              value: "true"
            {{- end }}
            {{- if .Values.monitoring.url }}
            - name: MONITOR_URL
              value: {{ .Values.monitoring.url | quote }}
            {{- end }}
            {{- with .Values.extraEnvVars }}
              {{- toYaml . | nindent 10 }}
            {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          {{- if .Values.customLivenessProbe }}
          livenessProbe: {{- .Values.customLivenessProbe | toYaml | nindent 12 }}
          {{- else if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.customReadinessProbe }}
          readinessProbe: {{- .Values.customReadinessProbe | toYaml | nindent 12 }}
          {{- else if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
