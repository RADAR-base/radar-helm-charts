apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "common.names.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "radar-output.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- if not .Values.existingSecret }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
        {{- end }}
      labels:
        app.kubernetes.io/name: {{ include "radar-output.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- include "radar-output.imagePullSecrets" . | nindent 6 }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: "app.kubernetes.io/name"
                    operator: In
                    values:
                    - {{ template "radar-output.name" . }}
                  - key: "app.kubernetes.io/instance"
                    operator: In
                    values:
                    - {{ .Release.Name }}
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: output
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ template "radar-output.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          command:
            - radar-output-restructure
          args:
            - -F
            - /etc/radar-output/config.yaml
          env:
          - name: RADAR_OUTPUT_RESTRUCTURE_OPTS
            value: {{ .Values.javaOpts  | quote }}
          - name: SOURCE_S3_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ template "radar-output.secretName" . }}
                key: sourceS3AccessToken
          - name: SOURCE_S3_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: {{ template "radar-output.secretName" . }}
                key: sourceS3SecretKey
          - name: TARGET_S3_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ template "radar-output.secretName" . }}
                key: targetS3AccessToken
          - name: TARGET_S3_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: {{ template "radar-output.secretName" . }}
                key: targetS3SecretKey
          - name: SOURCE_AZURE_USERNAME
            valueFrom:
              secretKeyRef:
                name: {{ template "radar-output.secretName" . }}
                key: sourceAzureUsername
          - name: SOURCE_AZURE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "radar-output.secretName" . }}
                key: sourceAzurePassword
          - name: SOURCE_AZURE_ACCOUNT_NAME
            valueFrom:
              secretKeyRef:
                name: {{ template "radar-output.secretName" . }}
                key: sourceAzureAccountName
          - name: SOURCE_AZURE_ACCOUNT_KEY
            valueFrom:
              secretKeyRef:
                name: {{ template "radar-output.secretName" . }}
                key: sourceAzureAccountKey
          - name: SOURCE_AZURE_SAS_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ template "radar-output.secretName" . }}
                key: sourceAzureSasToken
          - name: TARGET_AZURE_USERNAME
            valueFrom:
              secretKeyRef:
                name: {{ template "radar-output.secretName" . }}
                key: targetAzureUsername
          - name: TARGET_AZURE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "radar-output.secretName" . }}
                key: targetAzurePassword
          - name: TARGET_AZURE_ACCOUNT_NAME
            valueFrom:
              secretKeyRef:
                name: {{ template "radar-output.secretName" . }}
                key: targetAzureAccountName
          - name: TARGET_AZURE_ACCOUNT_KEY
            valueFrom:
              secretKeyRef:
                name: {{ template "radar-output.secretName" . }}
                key: targetAzureAccountKey
          - name: TARGET_AZURE_SAS_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ template "radar-output.secretName" . }}
                key: targetAzureSasToken
          {{- with .Values.extraEnvVars }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- if .Values.sentry.dsn }}
          - name: SENTRY_DSN
            value: {{ .Values.sentry.dsn }}
          - name: SENTRY_LOG_LEVEL
            value: {{ .Values.sentry.level }}
            {{- if .Values.sentry.stacktrace.enabled }}
          - name: SENTRY_ATTACHSTACKTRACE
            value: {{ .Values.sentry.stacktrace.enabled | quote }}
          - name: SENTRY_STACKTRACE_APP_PACKAGES
            value: {{ .Values.sentry.stacktrace.packages}}
            {{- end }}
          - name: SENTRY_NAME
            value: {{ .Values.sentry.service.name | default (include "radar-output.fullname" .) }}
          - name: SENTRY_RELEASE
            value: {{ .Values.sentry.service.release | default (printf "%s-%s" .Chart.Version .Chart.AppVersion) }}
          - name: SENTRY_ENVIRONMENT
            value: {{ .Values.sentry.service.environment }}
            {{- if .Values.openTelemetry.agent.enabled }}
          - name: SENTRY_TRACES_SAMPLE_RATE
            value: {{ .Values.openTelemetry.exporter.tracesSampleRate | quote }}
              {{- if not .Values.openTelemetry.exporter.metricsExporterEnabled }}
          - name: OTEL_METRICS_EXPORTER
            value: none
              {{- end }}
              {{- if not .Values.openTelemetry.exporter.tracesExporterEnabled }}
          - name: OTEL_TRACES_EXPORTER
            value: none
              {{- end }}
              {{- if not .Values.openTelemetry.exporter.logsExporterEnabled }}
          - name: OTEL_LOGS_EXPORTER
            value: none
              {{- end }}
            {{- end }}
          {{- else }}
          - name: SENTRY_ENABLED
            value: "false"
          {{- end }}
          {{- with .Values.extraEnvVars }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath:  /etc/radar-output
      volumes:
        - name: config
          configMap:
            name: {{ include "radar-output.fullname" . }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
