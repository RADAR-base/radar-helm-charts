apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "common.names.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "radar-rest-sources-authorizer.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "radar-rest-sources-authorizer.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- include "radar-rest-sources-authorizer.imagePullSecrets" . | nindent 6 }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: "app.kubernetes.io/name"
                    operator: In
                    values:
                    - {{ template "radar-rest-sources-authorizer.name" . }}
                  - key: "app.kubernetes.io/instance"
                    operator: In
                    values:
                    - {{ .Release.Name }}
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ template "radar-rest-sources-authorizer.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          env:
          - name: BASE_HREF
            value: /rest-sources/authorizer/
          - name: BACKEND_BASE_URL
            value: {{ printf "%s://%s/rest-sources/backend" .Values.advertised_protocol .Values.serverName }}
          - name: VALIDATE
            value: "true"
          - name: AUTH_GRANT_TYPE
            value: "authorization_code"
          - name: AUTH_CLIENT_ID
            value: {{ .Values.clientId }}
          - name: AUTH_CLIENT_SECRET
            value: ""
          - name: AUTH_CALLBACK_URL
            value: {{ printf "%s://%s/rest-sources/authorizer/login" .Values.advertised_protocol .Values.serverName }}
          - name: AUTH_PATH
            value: {{ .Values.authPath }}
          - name: AUTH_URI
            value: {{ .Values.authUrl | default (printf "%s://%s/managementportal/oauth" .Values.advertised_protocol .Values.serverName) }}
          {{- with .Values.extraEnvVars }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- if .Values.sentry.dsn }}
          - name: SENTRY_DSN
            value: {{ .Values.sentry.dsn }}
          - name: SENTRY_LOG_LEVEL
            value: {{ .Values.sentry.level }}
            {{- if .Values.sentry.stacktrace.enabled }}
          - name: SENTRY_ATTACHSTACKTRACE
            value: {{ .Values.sentry.stacktrace.enabled | quote }}
          - name: SENTRY_STACKTRACE_APP_PACKAGES
            value: {{ .Values.sentry.stacktrace.packages}}
            {{- end }}
          - name: SENTRY_NAME
            value: {{ .Values.sentry.service.name | default (include "radar-rest-sources-authorizer.fullname" .) }}
          - name: SENTRY_RELEASE
            value: {{ .Values.sentry.service.release | default (printf "%s-%s" .Chart.Version .Chart.AppVersion) }}
          - name: SENTRY_ENVIRONMENT
            value: {{ .Values.sentry.service.environment }}
            {{- if .Values.openTelemetry.agent.enabled }}
          - name: SENTRY_TRACES_SAMPLE_RATE
            value: {{ .Values.openTelemetry.exporter.tracesSampleRate | quote }}
              {{- if not .Values.openTelemetry.exporter.metricsExporterEnabled }}
          - name: OTEL_METRICS_EXPORTER
            value: none
              {{- end }}
              {{- if not .Values.openTelemetry.exporter.tracesExporterEnabled }}
          - name: OTEL_TRACES_EXPORTER
            value: none
              {{- end }}
              {{- if not .Values.openTelemetry.exporter.logsExporterEnabled }}
          - name: OTEL_LOGS_EXPORTER
            value: none
              {{- end }}
            {{- end }}
          {{- else }}
          - name: SENTRY_ENABLED
            value: "false"
          {{- end }}
          {{- with .Values.extraEnvVars }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          {{- if .Values.customLivenessProbe }}
          livenessProbe: {{- .Values.customLivenessProbe | toYaml | nindent 12 }}
          {{- else if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /rest-sources/authorizer/
              port: http
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.customReadinessProbe }}
          readinessProbe: {{- .Values.customReadinessProbe | toYaml | nindent 12 }}
          {{- else if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /rest-sources/authorizer/
              port: http
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.customStartupProbe }}
          startupProbe: {{- .Values.customStartupProbe | toYaml | nindent 12 }}
          {{- else if .Values.startupProbe.enabled }}
          startupProbe:
            httpGet:
              path: /rest-sources/authorizer/
              port: http
            initialDelaySeconds: {{ .Values.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.startupProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.startupProbe.timeoutSeconds }}
            successThreshold: {{ .Values.startupProbe.successThreshold }}
            failureThreshold: {{ .Values.startupProbe.failureThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
