{{- $connectClusterName := printf "%s-%s" (include "common.names.fullname" .) "connect-api" }}
{{- $connectorName := include "common.names.fullname" . }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "common.names.fullname" . }}-topics-sync-job
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
data:
  sync-topics.sh: |
    #!/bin/sh
    set -Eeuo pipefail
    echo "Fetching {{ $connectorName }} configuration... {{ $connectClusterName }}:8083"
    CONFIG=$(curl -sf {{ $connectClusterName }}:8083/connectors/{{ $connectorName }}/config | jq)
    echo "Fetching current topics from catalog-server..."
    UPSTREAM_TOPICS=$(curl -sf {{ .Values.catalogServer.url }}/source-types | jq -r '[to_entries | .[] | select(.key | test("^.*-source-types$")) | .value[].data[].topic] | sort | unique | join(",")')
    # If the upstream topics are empty, exit
    if [ -z "$UPSTREAM_TOPICS" ]; then
      echo "No topics found in catalog server, exiting."
      exit 0
    fi
    CURRENT_TOPICS=$(echo "$CONFIG" | jq -r '.topics')
    # Compare the upstream topics with the current topics in the connector config
    if [ "$UPSTREAM_TOPICS" != "$CURRENT_TOPICS" ]; then
      echo "Updating topics in connector config..."
      UPDATED_CONFIG=$(echo "$CONFIG" | jq --arg TOPICS "$TOPICS" '.topics = $TOPICS')
      curl -X PUT -H "Content-Type: application/json" -d "$UPDATED_CONFIG" -sf {{ $connectClusterName }}:8083/connectors/{{ $connectorName }}/config
      echo "Topics updated successfully."
      exit 0
    else
      echo "No changes in topics, skipping update."
      exit 0
    fi
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "common.names.fullname" . }}-topics-sync-job
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  # every 10 minutes
  schedule: "*/10 * * * *"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: sync-topics
            image: badouralix/curl-jq:latest
            command: ["/tmp/sync-topics.sh"]
            volumeMounts:
              - mountPath: /tmp/
                name: sync-topics-config
          restartPolicy: OnFailure
          volumes:
          - name: sync-topics-config
            configMap:
              name: {{ include "common.names.fullname" . }}-topics-sync-job
              defaultMode: 0777
