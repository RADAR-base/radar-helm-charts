{{ if .Values.syncTopics.enabled }}
{{- $connectClusterName := printf "%s-%s" (include "common.names.fullname" .) "connect-api" }}
{{- $connectorName := include "common.names.fullname" . }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "common.names.fullname" . }}-topics-sync-job
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
data:
  sync-topics.sh: |
    #!/bin/sh
    set -u  # Only unset variable errors

    echo "Fetching {{ $connectorName }} configuration... {{ $connectClusterName }}:8083"
    current_config=$(curl -sf {{ $connectClusterName }}:8083/connectors/{{ $connectorName }}/config)
    curl_status=$?
    if [ $curl_status -ne 0 ]; then
      echo "S3-connector cluster cannot be reached. Will retry in a moment."
      exit $curl_status
    fi

    echo "Fetching current topics from catalog-server..."
    upstream_topics=$(curl -sf {{ .Values.catalogServer.url }}/source-types | jq -r '[to_entries | .[] | select(.key | test("^.*-source-types$")) | .value[].data[].topic] | sort | unique | join(",")')
    curl_status=$?
    if [ $curl_status -ne 0 ]; then
      echo "Catalog-server cannot be reached. Will retry in a moment."
      exit $curl_status
    fi

    if [ -z "$upstream_topics" ]; then
      echo "No topics found in catalog server. Exiting because there is nothing to synchronize."
      exit 0
    fi

    current_topics=$(echo "$current_config" | jq -r '.topics')
    jq_status=$?
    if [ $jq_status -ne 0 ]; then
      echo "ERROR: Failed to parse current topics (exit code $jq_status)"
      exit $jq_status
    fi

    if [ "$upstream_topics" != "$current_topics" ]; then
      echo "Updating topics in connector config..."
      updated_config=$(echo "$current_config" | jq --arg topics "$upstream_topics" '.topics = $topics')
      jq_status=$?
      if [ $jq_status -ne 0 ]; then
        echo "ERROR: Failed to update config with new topics (exit code $jq_status)"
        exit $jq_status
      fi
      curl -X PUT -H "Content-Type: application/json" -d "$updated_config" -sf {{ $connectClusterName }}:8083/connectors/{{ $connectorName }}/config
      put_status=$?
      if [ $put_status -ne 0 ]; then
        echo "ERROR: Failed to update connector config (exit code $put_status)"
        exit $put_status
      fi
      echo "Topics updated successfully."
      exit 0
    else
      echo "No changes in topics, skipping update."
      exit 0
    fi
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "common.names.fullname" . }}-topics-sync-job
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  schedule: {{ default "*/10 * * * *" .Values.syncTopics.cronjob.schedule | quote }}
  successfulJobsHistoryLimit: {{ .Values.syncTopics.cronjob.successfulJobsHistoryLimit | default 1 }}
  failedJobsHistoryLimit: {{ .Values.syncTopics.cronjob.failedJobsHistoryLimit | default 1 }}
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: topics-sync
              image: {{ .Values.syncTopics.image.repository }}:{{ .Values.syncTopics.image.tag }}
              command: ["/tmp/sync-topics.sh"]
              volumeMounts:
                - mountPath: /tmp/
                  name: sync-topics-config
          restartPolicy: OnFailure
          volumes:
            - name: sync-topics-config
              configMap:
                name: {{ include "common.names.fullname" . }}-topics-sync-job
                defaultMode: 0777
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "common.names.fullname" . }}-topics-sync-job-init
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  backoffLimit: 23
  template:
    spec:
      containers:
        - name: topics-sync
          image: {{ .Values.syncTopics.image.repository }}:{{ .Values.syncTopics.image.tag }}
          command: ["/tmp/sync-topics.sh"]
          volumeMounts:
            - mountPath: /tmp/
              name: sync-topics-config
      restartPolicy: OnFailure
      volumes:
        - name: sync-topics-config
          configMap:
            name: {{ include "common.names.fullname" . }}-topics-sync-job
            defaultMode: 0777
{{- end }}
