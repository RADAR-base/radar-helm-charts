# Default values for radar-self-enrolment-ui.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Hostname for the Self-Enrolment Portal service
server_name: localhost

# -- Number of replicas in deployment
replicaCount: 1
# -- Number of revisions kept in history
revisionHistoryLimit: 5

image:
  # -- Image registry
  registry: ghcr.io
  # -- Image repository
  repository: radar-base/radar-self-enrolment-ui
  # -- Image tag (immutable tags are recommended)
  # Overrides the image tag whose default is the chart appVersion.
  tag:
  # -- Image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
  digest: ""
  # -- Image pull policy
  pullPolicy: IfNotPresent
  # -- Optionally specify an array of imagePullSecrets.
  # Secrets must be manually created in the namespace.
  # e.g:
  # pullSecrets:
  #   - myRegistryKeySecretName
  #
  pullSecrets: []

# -- String to partially override radar-self-enrolment-ui.fullname template with a string (will prepend the release name)
nameOverride: ""
# -- String to fully override radar-self-enrolment-ui.fullname template with a string
fullnameOverride: ""

## -- Application config
config:
  csrfCookieName: "radar_csrf"
  secrets: {}

## -- Service configuration
service:
  type: ClusterIP
  # -- The load balancer IP
  loadBalancerIP: ""
  nodePort: ""
  port: 80
  # -- The service port name. Useful to set a custom service port name if it must follow a scheme (e.g. Istio)
  name: http

## -- Secret configuration
secret:
  # -- switch to false to prevent creating the secret
  enabled: true
  # -- Provide custom name of existing secret, or custom name of secret to be created
  nameOverride: ""
  # nameOverride: "myCustomSecret"
  # -- Annotations to be added to secret. Annotations are added only when secret is being created. Existing secret will not be modified.
  secretAnnotations:
    # Create the secret before installation, and only then. This saves the secret from regenerating during an upgrade
    # pre-upgrade is needed to upgrade from 0.7.0 to newer. Can be deleted afterwards.
    helm.sh/hook-weight: "0"
    helm.sh/hook: pre-install, pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/resource-policy: keep
  # -- switch to false to prevent checksum annotations being maintained and propagated to the pods
  hashSumEnabled: true

# -- Reconfigure Ingress to not force TLS
disable_tls: false
# -- The protocol in URIs (https, http)
advertised_protocol: https

ingress:
  # -- Enable ingress controller resource
  enabled: true
  # -- Annotations that define default ingress class, certificate issuer
  # @default -- check values.yaml
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
  # -- Path within the url structure
  path: "/kratos-ui(/|$)(.*)"
  # -- Ingress Path type
  pathType: ImplementationSpecific
  # -- IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)
  ingressClassName: nginx
  # -- Hosts to accept requests from
  hosts:
    - '{{ .Values.server_name }}'
  tls:
    # -- TLS Secret Name
    secretName: radar-base-tls

## -- Container level security context
securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 10000
  runAsGroup: 10000
  allowPrivilegeEscalation: false
  privileged: false
  seccompProfile:
    type: RuntimeDefault
  seLinuxOptions:
    level: s0:c123,c456

## -- Pod level security context
podSecurityContext:
  fsGroupChangePolicy: OnRootMismatch
  runAsNonRoot: true
  runAsUser: 10000
  fsGroup: 10000
  runAsGroup: 10000
  seccompProfile:
    type: RuntimeDefault

## -- Deployment configuration
deployment:
  resources: {}
  #  We usually recommend not to specify default resources and to leave this as a conscious
  #  choice for the user. This also increases chances charts run on environments with little
  #  resources, such as Minikube. If you do want to specify resources, uncomment the following
  #  lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  #  limits:
  #    cpu: 100m
  #    memory: 128Mi
  #  requests:
  #    cpu: 100m
  #  memory: 128Mi

  # -- Array of extra envs to be passed to the deployment. Kubernetes format is expected
  # - name: FOO
  #   value: BAR
  extraEnv:
    - name: HYDRA_ADMIN_URL
      value: http://hydra-admin
  # -- If you want to mount external volume
  # For example, mount a secret containing Certificate root CA to verify database
  # TLS connection.
  extraVolumes: []
  # - name: my-volume
  #   secret:
  #     secretName: my-secret
  extraVolumeMounts: []
  # - name: my-volume
  #   mountPath: /etc/secrets/my-secret
  #   readOnly: true

  # -- Node labels for pod assignment.
  nodeSelector: {}
  # If you do want to specify node labels, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'annotations:'.
  #   foo: bar

  # -- Configure node tolerations.
  tolerations: []

  # -- Configure pod topologySpreadConstraints.
  topologySpreadConstraints: []
  # - maxSkew: 1
  #   topologyKey: topology.kubernetes.io/zone
  #   whenUnsatisfiable: DoNotSchedule
  #   labelSelector:
  #     matchLabels:
  #       app.kubernetes.io/name: radar-self-enrolment-ui
  #       app.kubernetes.io/instance: radar-self-enrolment-ui

  # -- Configure pod dnsConfig.
  dnsConfig: {}
  #   options:
  #     - name: "ndots"
  #       value: "1"

  labels: {}
  #      If you do want to specify additional labels, uncomment the following
  #      lines, adjust them as necessary, and remove the curly braces after 'labels:'.
  #      e.g.  type: app

  annotations: {}
  #      If you do want to specify annotations, uncomment the following
  #      lines, adjust them as necessary, and remove the curly braces after 'annotations:'.
  #      e.g.  sidecar.istio.io/rewriteAppHTTPProbers: "true"

  # https://github.com/kubernetes/kubernetes/issues/57601
  automountServiceAccountToken: false
  terminationGracePeriodSeconds: 60

affinity: {}

# -- Network policy defines who can access this application and who this applications has access to
# @default -- check `values.yaml`
networkpolicy:
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: '{{ .Release.Namespace }}'
      podSelector:
        matchLabels:
          app.kubernetes.io/name: ingress-nginx
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: '{{ .Release.Namespace }}'
      podSelector:
        matchLabels:
          app.kubernetes.io/name: kratos-admin
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: '{{ .Release.Namespace }}'
      podSelector:
        matchLabels:
          app.kubernetes.io/name: hydra
  - to:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: kube-system
      podSelector:
        matchLabels:
          k8s-app: kube-dns
    ports:
      - port: 53
        protocol: UDP
      - port: 53
        protocol: TCP

# -- Set this to ORY Kratos's Admin URL
kratosAdminUrl: "http://kratos-admin:80/admin"

# -- Set this to ORY Kratos's public URL
kratosPublicUrl: "https://localhost/kratos"

# -- Set this to ORY Kratos's public URL accessible from the outside world.
kratosBrowserUrl: "https://localhost/kratos"

# -- Set this to ORY Hydra's Admin URL
hydraAdminUrl: "http://hydra-admin"

# -- Set this to ORY Hydra's public URL
hydraPublicUrl: "http://hydra-public:4444"

# -- Set this to the REST source backend service URL
restSourceBackendUrl: "http://radar-rest-sources-backend:8080/rest-sources/backend"

# -- Set this to the RADAR Gateway service URL
gatewayUrl: "http://radar-gateway:8080"

# -- Client ID for ARMT authentication
armtClientId: "aRMT"

# -- Client secret for ARMT authentication
armtClientSecret: ""

# -- Client ID for SEP authentication
sepClientId: "SEP"

# -- Client secret for SEP authentication
sepClientSecret: ""

# -- GitHub authentication token for API access (leave empty if not used)
githubAuthToken: ""

# -- The basePath
basePath: "/kratos-ui"

test:
  # -- use a busybox image from another repository
  busybox:
    repository: busybox
    tag: 1

# -- Custom livenessProbe that overrides the default one
customLivenessProbe: {}

livenessProbe:
  # -- Enable livenessProbe
  enabled: false
  # -- Initial delay seconds for livenessProbe
  initialDelaySeconds: 3
  # -- Period seconds for livenessProbe
  periodSeconds: 300
  # -- Timeout seconds for livenessProbe
  timeoutSeconds: 10
  # -- Success threshold for livenessProbe
  successThreshold: 1
  # -- Failure threshold for livenessProbe
  failureThreshold: 3

# -- Custom readinessProbe that overrides the default one
customReadinessProbe: {}

readinessProbe:
  # -- Enable readinessProbe
  enabled: false
  # -- Initial delay seconds for readinessProbe
  initialDelaySeconds: 5
  # -- Period seconds for readinessProbe
  periodSeconds: 10
  # -- Timeout seconds for readinessProbe
  timeoutSeconds: 10
  # -- Success threshold for readinessProbe
  successThreshold: 1
  # -- Failure threshold for readinessProbe
  failureThreshold: 3
