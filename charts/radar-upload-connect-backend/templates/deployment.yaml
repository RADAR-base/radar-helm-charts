apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "common.names.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "radar-upload-connect-backend.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "radar-upload-connect-backend.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- include "radar-upload-connect-backend.imagePullSecrets" . | nindent 6 }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: "app.kubernetes.io/name"
                    operator: In
                    values:
                    - {{ template "radar-upload-connect-backend.name" . }}
                  - key: "app.kubernetes.io/instance"
                    operator: In
                    values:
                    - {{ .Release.Name }}
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ template "radar-upload-connect-backend.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          command:
            - radar-upload-backend
            - /etc/upload-backend/upload.yml
          {{- $secretName := include "radar-upload-connect-backend.fullname" . }}
          env:
          - name: JAVA_OPTS
            value: "-Dlogback.configurationFile=/etc/upload-backend/logback.xml"
          - name: DATABASE_URL
            valueFrom:
              secretKeyRef:
                name: {{ .Values.postgres.urlSecret.name | default $secretName }}
                key: {{ .Values.postgres.urlSecret.key | default "databaseUrl" }}
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Values.postgres.userSecret.name | default $secretName }}
                key: {{ .Values.postgres.userSecret.key | default "databaseUser" }}
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.postgres.passwordSecret.name | default $secretName }}
                key: {{ .Values.postgres.passwordSecret.key | default "databasePassword" }}
          {{- with .Values.extraEnvVars }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
          ports:
            - name: http
              containerPort: 8085
              protocol: TCP
          {{- if .Values.customLivenessProbe }}
          livenessProbe: {{- .Values.customLivenessProbe | toYaml | nindent 12 }}
          {{- else if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /upload/api/health
              port: 8085
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.customReadinessProbe }}
          readinessProbe: {{- .Values.customReadinessProbe | toYaml | nindent 12 }}
          {{- else if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /upload/api/health
              port: 8085
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /etc/upload-backend/
      volumes:
        - name: config
          configMap:
            name: {{ include "radar-upload-connect-backend.fullname" . }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
