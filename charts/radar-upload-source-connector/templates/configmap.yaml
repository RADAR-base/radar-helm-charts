apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "common.names.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
data:
  source-upload.properties: |
    name=radar-upload-source
    connector.class=org.radarbase.connect.upload.UploadSourceConnector
    tasks.max=4
    upload.source.client.id={{ .Values.client_id }}
    upload.source.client.secret={{ .Values.client_secret }}
    upload.source.client.tokenUrl={{ .Values.managementportal_url }}/oauth/token
    upload.source.backend.baseUrl=http://{{ .Values.radar_upload_connect_backend }}:8085/upload/api/
    upload.source.poll.interval.ms={{ .Values.poll_interval | int }}
    upload.source.queue.size={{ .Values.task.queueSize | int }}
    upload.source.record.converter.classes={{ .Values.record_converter_classes }}
    upload.source.file.uploader.type={{ .Values.uploaderType }}
    upload.source.file.uploader.target.endpoint={{ .Values.s3Endpoint }}
    upload.source.file.uploader.target.root.directory={{ .Values.targetBucketName }}
    upload.source.file.uploader.username={{ .Values.bucketAccessKey }}
    upload.source.file.uploader.password={{ .Values.bucketSecretKey }}
  healthcheck.sh: |
    #!/bin/sh
    STATUS=$(curl -sf localhost:8083/connectors/radar-upload-source/status | grep -o '\"state\":\"[^\"]*\"')
    if echo "$STATUS" | tr '\\n' ',' | grep -q FAILED; then
      exit 1
    elif [ $(echo "$STATUS" | grep RUNNING | wc -l) -le 1 ]; then
      exit 1
    fi
