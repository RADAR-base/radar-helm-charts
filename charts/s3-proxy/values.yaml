# Default values for s3-proxy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Number of s3-proxy replicas to deploy
replicaCount: 1

image:
  # -- Image registry
  registry: docker.io
  # -- Image repository
  repository: andrewgaul/s3proxy
  # -- Image tag (immutable tags are recommended)
  # Overrides the image tag whose default is the chart appVersion.
  tag: sha-85b0f98
  # -- Image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
  digest: ""
  # -- Image pull policy
  pullPolicy: IfNotPresent
  # -- Optionally specify an array of imagePullSecrets.
  # Secrets must be manually created in the namespace.
  # e.g:
  # pullSecrets:
  #   - myRegistryKeySecretName
  #
  pullSecrets: []

# -- String to partially override s3-proxy.fullname template with a string (will prepend the release name)
nameOverride: ""
# -- String to fully override s3-proxy.fullname template with a string
fullnameOverride: ""

# -- Configure s3-proxy pods' Security Context
podSecurityContext: {}
  # fsGroup: 2000

# -- Configure s3-proxy containers' Security Context
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  # -- Kubernetes Service type
  type: ClusterIP
  # -- s3-proxy port
  port: 80

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi

    # -- CPU/Memory resource requests
  requests:
    cpu: 100m
    memory: 128Mi

# -- Node labels for pod assignment
nodeSelector: {}

# -- Toleration labels for pod assignment
tolerations: []

# -- Affinity labels for pod assignment
affinity: {}

# -- Extra environment variables
extraEnvVars: []
#  - name: BEARER_AUTH
#    value: true

# -- Custom livenessProbe that overrides the default one
customLivenessProbe: {}

livenessProbe:
  # -- Enable livenessProbe
  enabled: true
  # -- Initial delay seconds for livenessProbe
  initialDelaySeconds: 15
  # -- Period seconds for livenessProbe
  periodSeconds: 60
  # -- Timeout seconds for livenessProbe
  timeoutSeconds: 3
  # -- Success threshold for livenessProbe
  successThreshold: 1
  # -- Failure threshold for livenessProbe
  failureThreshold: 3

# -- Custom readinessProbe that overrides the default one
customReadinessProbe: {}

readinessProbe:
  # -- Enable readinessProbe
  enabled: true
  # -- Initial delay seconds for readinessProbe
  initialDelaySeconds: 15
  # -- Period seconds for readinessProbe
  periodSeconds: 60
  # -- Timeout seconds for readinessProbe
  timeoutSeconds: 3
  # -- Success threshold for readinessProbe
  successThreshold: 1
  # -- Failure threshold for readinessProbe
  failureThreshold: 3

# -- Network policy defines who can access this application and who this applications has access to
# @default -- check `values.yaml`
networkpolicy:
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: '{{ .Release.Namespace }}'
      podSelector:
        matchLabels:
          app.kubernetes.io/name: radar-output
  - from:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: '{{ .Release.Namespace }}'
      podSelector:
        matchLabels:
          app.kubernetes.io/name: radar-s3-connector
  - from:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: '{{ .Release.Namespace }}'
      podSelector:
        matchLabels:
          app.kubernetes.io/name: radar-upload-source-connector
  egress:
  - to:
    - ipBlock:
        cidr: 0.0.0.0/0
        except:
        - 10.0.0.0/8
        - 192.168.0.0/16
        - 172.16.0.0/12
  - to:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: '{{ .Release.Namespace }}'
      podSelector:
        matchLabels:
          app.kubernetes.io/name: 'minio'
  - to:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: kube-system
      podSelector:
        matchLabels:
          k8s-app: kube-dns
    ports:
      - port: 53
        protocol: UDP
      - port: 53
        protocol: TCP

s3:
  # -- Credentials used to access this proxy
  identity: null
  # -- Credentials used to access this proxy
  credential: ""

# -- Where requests should be proxied to
# @default -- Check below
target:
  # -- Target provider
  provider: null
  # -- Target endpoint
  endpoint: null
  # -- Target identity
  identity: null
  # -- Target credential
  credential: ""
  # -- Target Swift / Keystone API
  api: null
  # -- Singular region
  region: null
  # -- Multiple regions (keystone)
  regions: null
  filesystem:
    # -- Base directory for filesystem provider
    basedir: /data
  azureblob:
    # -- Authentication method for Azure
    auth: azureKey
  keystone:
    # -- Keystone (Swift) version
    version: null
    # -- Keystone (Swift) credential type
    credentialType: null
    # -- Keystone (Swift) scope
    scope: null
    # -- Keystone (Swift) project domain name
    projectDomainName: null
