# Default values for velero-s3-deployment.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Number of replicas for object storage backup pod, should be 1
objectStorageBackupReplicaCount: 1

mc_image:
  # -- Image registry
  registry: docker.io
  # -- Image repository
  repository: minio/mc
  # -- Image tag (immutable tags are recommended)
  # Overrides the image tag whose default is the chart appVersion.
  tag:
  # -- Image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
  digest: ""
  # -- Image pull policy
  pullPolicy: IfNotPresent
  # -- Optionally specify an array of imagePullSecrets.
  # Secrets must be manually created in the namespace.
  # e.g:
  # pullSecrets:
  #   - myRegistryKeySecretName
  #
  pullSecrets: []

# -- Configure object storage backup pod pods' Security Context
podSecurityContext: {}
  # fsGroup: 2000

# -- Configure object storage backup pod containers' Security Context
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# -- Network policy defines who can access this application and who this applications has access to
# @default -- check `values.yaml`
networkpolicy:
  policyTypes:
  - Egress
  egress:
  - to:
    - ipBlock:
        cidr: 0.0.0.0/0
        except:
        - 10.0.0.0/8
        - 192.168.0.0/16
        - 172.16.0.0/12
  - to:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: '{{ .Release.Namespace }}'
      podSelector:
        matchLabels:
          app.kubernetes.io/name: 'minio'
  - to:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: kube-system
      podSelector:
        matchLabels:
          k8s-app: kube-dns
    ports:
      - port: 53
        protocol: UDP
      - port: 53
        protocol: TCP

local:
  # -- Address of local object storage to backup data from
  address: minio.default:9000
  # -- Access key of local object storage
  accessKey: accessKey
  # -- Secret key of local object storage
  secretKey: secretKey
  # -- Name of local intermediate data bucket
  intermediateBucketName: radar-intermediate-storage
  # -- Name of local output data bucket
  outputBucketName: radar-output-storage

backup:
  # -- Address of remote object storage to backup data to
  address: s3.example.com
  # -- Access key of remote object storage
  accessKey: accessKey
  # -- Secret key of remote object storage
  secretKey: secretKey
  # -- Name of remote intermediate data bucket
  intermediateBucketName: radar-intermediate-storage
  # -- Name of remote output data bucket
  outputBucketName: radar-output-storage

# ----
velero:
  # -- Add plugins to enable using different storage systems, AWS plugin is needed to be able to push to S3-compatible object storages
  # @default -- check values.yaml
  initContainers:
    - name: velero-plugin-for-aws
      image: velero/velero-plugin-for-aws:v1.5.0
      imagePullPolicy: IfNotPresent
      volumeMounts:
        - mountPath: /target
          name: plugins

  kubectl:
    image:
      tag: 1.26.14-debian-11-r6

  metrics:
    # -- Enable monitoring metrics to be collected
    enabled: true
    serviceMonitor:
      # -- Enable prometheus-operator interface
      enabled: true

  configuration:
    # -- Cloud provider being used (e.g. aws, azure, gcp).
    provider: aws

    # -- Parameters for the `default` BackupStorageLocation. See
    # https://velero.io/docs/v1.0.0/api-types/backupstoragelocation/
    # @default -- Check below
    backupStorageLocation:
      # -- Cloud provider where backups should be stored. Usually should
      # match `configuration.provider`. Required.
      name: default
      # -- Bucket to store backups in. Required.
      bucket: radar-base-backups
      # -- Additional provider-specific configuration. See link above
      # for details of required/optional fields for your provider.
      # @default -- Check values.yaml
      config:
        region: eu-central-1
        s3ForcePathStyle: "true"
        s3Url: "https://s3.amazon.com"

  credentials:
    secretContents:
      # -- Check
      # @default -- Check values.yaml
      cloud: |
        [default]
        aws_access_key_id=accessKey
        aws_secret_access_key=secretKey

  # -- Don't snapshot volumes where they're not supported
  snapshotsEnabled: false

  # -- Deploy restic to backup Kubernetes volumes
  deployRestic: true

  restic:
    # -- Path to find pod volumes
    podVolumePath: /var/lib/kubelet/pods
    # -- Shouldn't need privilege to backup the volumes
    privileged: false

  schedules:
    backup:
      # -- Backup every day at 3:00 AM
      schedule: "0 3 * * *"
      template:
        # -- Keep backup for 10 days
        ttl: "240h"
        # -- Backup cluster wide resources
        includeClusterResources: true
        # -- Don't snapshot volumes where they're not supported
        snapshotVolumes: false
        # -- Namespaces to backup manifests and volumes from
        # @default -- Check values.yaml
        includedNamespaces:
          - cert-manager
          - default
          - graylog
          - kubernetes-dashboard
          - monitoring
          - velero
